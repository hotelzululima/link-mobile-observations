steps:
  - label: gittag
    command: scripts/write-git-version
    timeout_in_minutes: 1
    concurrency: 1
    concurrency_group: "link-mobile-observations"
    artifact_paths: git-version.txt
    agents:
      - queue=link-aws-dev

  - label: Upload docker image
    command: scripts/write-git-version
    timeout_in_minutes: 10
    concurrency: 1
    concurrency_group: "link-mobile-observations"
    agents:
      - queue=link-scala-dev-nyc
    command:
      - scripts/write-git-version
      - cat ./git-version.txt
      - source ./git-version.txt
      - echo GIT tag $GITTAG
      - scripts/package-swarm
      - sed -i='' "s/<TAG>/$GITTAG/" ansible/swarm-upload.yml
      - cat ansible/swarm-upload.yml
      - aws s3 cp s3://dev-nyc-secrets/vault_pass .
      - /usr/local/bin/ansible-playbook -vvv --vault-password-file=vault_pass -i ansible/inventories/dev ansible/swarm-upload.yml

  - label: dev ds deploy
    timeout_in_minutes: 5
    concurrency: 1
    concurrency_group: "link-mobile-observations"
    command:
      - ls -la /usr/local/bin/
      - echo "------"
      - ls -la
      - scripts/write-git-version
      - echo "------"
      - ls -la
      - echo "------"
      - cat ./git-version.txt
      - source ./git-version.txt && echo GIT tag $GITTAG
      - aws s3 cp s3://dev-nyc-secrets/vault_pass .
      - echo "------"
      - ls -la ./scripts
      - ls -la ./ansible
      - echo "------"
      - ls -la ./ansible/files
      - /usr/local/bin/ansible-playbook -vvv --vault-password-file=vault_pass -i ansible/inventories/dev ansible/swarm-deploy.yml
#    branches: master
    agents:
      - queue=link-aws-dev
    env:
      APPNAME: link-mobile-observations